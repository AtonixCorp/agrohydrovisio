{"ast":null,"code":"var _jsxFileName = \"/Users/ofidohubvm/Atonixcorp_organization/hydrovisio/frontend/src/translator/LanguageSelector.js\";\njavascript;\n// src/LanguageSelector.js\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  const languages = [{\n    code: 'id',\n    name: 'Bahasa Indonesia'\n  }, {\n    code: 'it',\n    name: 'Italiano'\n  }, {\n    code: 'en',\n    name: 'English'\n  }, {\n    code: 'nl',\n    name: 'Nederlands'\n  }, {\n    code: 'pl',\n    name: 'Polski'\n  }, {\n    code: 'pt',\n    name: 'Português (Brasil)'\n  }, {\n    code: 'ru',\n    name: 'PyccKuŭ'\n  }, {\n    code: 'sv',\n    name: 'Svenska'\n  }, {\n    code: 'tr',\n    name: 'Türkçe'\n  }, {\n    code: 'uk',\n    name: 'YkpaïHcbKa'\n  }];\n  const handleLanguageChange = language => {\n    // Handle the language change logic here\n    console.log(`Language changed to: ${language.name}`);\n    // You can implement additional logic to change the language of your app\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary dropdown-toggle\",\n      type: \"button\",\n      id: \"languageDropdown\",\n      \"data-bs-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\",\n      children: \"Select Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"languageDropdown\",\n      children: languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dropdown-item\",\n          onClick: () => handleLanguageChange(language),\n          children: language.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, language.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["javascript","React","jsxDEV","_jsxDEV","LanguageSelector","languages","code","name","handleLanguageChange","language","console","log","className","children","type","id","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/ofidohubvm/Atonixcorp_organization/hydrovisio/frontend/src/translator/LanguageSelector.js"],"sourcesContent":["javascript;\n// src/LanguageSelector.js\n\nimport React from 'react';\n\nconst LanguageSelector = () => {\n  const languages = [\n    { code: 'id', name: 'Bahasa Indonesia' },\n    { code: 'it', name: 'Italiano' },\n    { code: 'en', name: 'English' },\n    { code: 'nl', name: 'Nederlands' },\n    { code: 'pl', name: 'Polski' },\n    { code: 'pt', name: 'Português (Brasil)' },\n    { code: 'ru', name: 'PyccKuŭ' },\n    { code: 'sv', name: 'Svenska' },\n    { code: 'tr', name: 'Türkçe' },\n    { code: 'uk', name: 'YkpaïHcbKa' },\n  ];\n\n  const handleLanguageChange = (language) => {\n    // Handle the language change logic here\n    console.log(`Language changed to: ${language.name}`);\n    // You can implement additional logic to change the language of your app\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"languageDropdown\"\n        data-bs-toggle=\"dropdown\"\n        aria-expanded=\"false\"\n      >\n        Select Language\n      </button>\n      <ul className=\"dropdown-menu\" aria-labelledby=\"languageDropdown\">\n        {languages.map((language) => (\n          <li key={language.code}>\n            <button\n              className=\"dropdown-item\"\n              onClick={() => handleLanguageChange(language)}\n            >\n              {language.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n"],"mappings":";AAAAA,UAAU;AACV;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAmB,CAAC,EACxC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa,CAAC,EAClC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAqB,CAAC,EAC1C;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa,CAAC,CACnC;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzC;IACAC,OAAO,CAACC,GAAG,CAAC,wBAAwBF,QAAQ,CAACF,IAAI,EAAE,CAAC;IACpD;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MACES,SAAS,EAAC,mCAAmC;MAC7CE,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAC,kBAAkB;MACrB,kBAAe,UAAU;MACzB,iBAAc,OAAO;MAAAF,QAAA,EACtB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MAAIS,SAAS,EAAC,eAAe;MAAC,mBAAgB,kBAAkB;MAAAC,QAAA,EAC7DR,SAAS,CAACe,GAAG,CAAEX,QAAQ,iBACtBN,OAAA;QAAAU,QAAA,eACEV,OAAA;UACES,SAAS,EAAC,eAAe;UACzBS,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAACC,QAAQ,CAAE;UAAAI,QAAA,EAE7CJ,QAAQ,CAACF;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GANFV,QAAQ,CAACH,IAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GA7CIlB,gBAAgB;AA+CtB,eAAeA,gBAAgB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}